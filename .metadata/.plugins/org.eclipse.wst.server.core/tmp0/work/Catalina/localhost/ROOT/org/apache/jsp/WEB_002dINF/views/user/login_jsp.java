/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.96
 * Generated at: 2024-11-25 12:10:47 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.user;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class login_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<link href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${path}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/csss/memberlogin.css\" rel=\"stylesheet\"/> \r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("<body id=\"particles-js\"></body>\r\n");
      out.write("<div class=\"animated bounceInDown\">\r\n");
      out.write("  <div class=\"container\">\r\n");
      out.write("    <span class=\"error animated tada\" id=\"msg\"></span>\r\n");
      out.write("    \r\n");
      out.write("    <form action=\"login\" method=\"post\" name=\"form1\" class=\"box\" onsubmit=\"return checkStuff()\" >\r\n");
      out.write("      <h4>User<span>Dashboard</span></h4>\r\n");
      out.write("      <h5>Sign in to your account.</h5>\r\n");
      out.write("        <input type=\"text\" name=\"username\" placeholder=\"Email\" autocomplete=\"off\">\r\n");
      out.write("        	<i class=\"typcn typcn-eye\" id=\"eye\"></i>\r\n");
      out.write("        <input type=\"password\" name=\"password\" placeholder=\"Password\" id=\"pwd\" autocomplete=\"off\">\r\n");
      out.write("       \r\n");
      out.write("        <label>\r\n");
      out.write("          <input type=\"checkbox\">\r\n");
      out.write("          <span></span>\r\n");
      out.write("          <small class=\"rmb\">Remember me</small>\r\n");
      out.write("        </label>\r\n");
      out.write("        \r\n");
      out.write("        	<a href=\"#\" class=\"forgetpass\">Forget Password?</a>\r\n");
      out.write("        <input type=\"submit\" value=\"Sign in\" class=\"btn1\">\r\n");
      out.write("      </form>\r\n");
      out.write("      \r\n");
      out.write("        <a href=\"/user/join\" class=\"dnthave\">회원이 아니신가요? Sign up</a>\r\n");
      out.write("  </div> \r\n");
      out.write("      \r\n");
      out.write("</div>\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</html>\r\n");
      out.write("<script>\r\n");
      out.write("var pwd = document.getElementById('pwd');\r\n");
      out.write("var eye = document.getElementById('eye');\r\n");
      out.write("\r\n");
      out.write("eye.addEventListener('click',togglePass);\r\n");
      out.write("\r\n");
      out.write("function togglePass(){\r\n");
      out.write("\r\n");
      out.write("   eye.classList.toggle('active');\r\n");
      out.write("\r\n");
      out.write("   (pwd.type == 'password') ? pwd.type = 'text' : pwd.type = 'password';\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("// Form Validation\r\n");
      out.write("\r\n");
      out.write("function checkStuff() {\r\n");
      out.write("  var username = document.form1.username;\r\n");
      out.write("  var password = document.form1.password;\r\n");
      out.write("  var msg = document.getElementById('msg');\r\n");
      out.write("  \r\n");
      out.write("  if (username.value == \"\") {\r\n");
      out.write("    msg.style.display = 'block';\r\n");
      out.write("    msg.innerHTML = \"Please enter your email\";\r\n");
      out.write("    email.focus();\r\n");
      out.write("    return false;\r\n");
      out.write("  } else {\r\n");
      out.write("    msg.innerHTML = \"\";\r\n");
      out.write("  }\r\n");
      out.write("  \r\n");
      out.write("   if (password.value == \"\") {\r\n");
      out.write("    msg.innerHTML = \"Please enter your password\";\r\n");
      out.write("    password.focus();\r\n");
      out.write("    return false;\r\n");
      out.write("  } else {\r\n");
      out.write("    msg.innerHTML = \"\";\r\n");
      out.write("  }\r\n");
      out.write("   var re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n");
      out.write("  if (!re.test(email.value)) {\r\n");
      out.write("    msg.innerHTML = \"Please enter a valid email\";\r\n");
      out.write("    username.focus();\r\n");
      out.write("    return false;\r\n");
      out.write("  } else {\r\n");
      out.write("    msg.innerHTML = \"\";\r\n");
      out.write("  }\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("// ParticlesJS\r\n");
      out.write("\r\n");
      out.write("// ParticlesJS Config.\r\n");
      out.write("particlesJS(\"particles-js\", {\r\n");
      out.write("  \"particles\": {\r\n");
      out.write("    \"number\": {\r\n");
      out.write("      \"value\": 60,\r\n");
      out.write("      \"density\": {\r\n");
      out.write("        \"enable\": true,\r\n");
      out.write("        \"value_area\": 800\r\n");
      out.write("      }\r\n");
      out.write("    },\r\n");
      out.write("    \"color\": {\r\n");
      out.write("      \"value\": \"#ffffff\"\r\n");
      out.write("    },\r\n");
      out.write("    \"shape\": {\r\n");
      out.write("      \"type\": \"circle\",\r\n");
      out.write("      \"stroke\": {\r\n");
      out.write("        \"width\": 0,\r\n");
      out.write("        \"color\": \"#000000\"\r\n");
      out.write("      },\r\n");
      out.write("      \"polygon\": {\r\n");
      out.write("        \"nb_sides\": 5\r\n");
      out.write("      },\r\n");
      out.write("      \"image\": {\r\n");
      out.write("        \"src\": \"img/github.svg\",\r\n");
      out.write("        \"width\": 100,\r\n");
      out.write("        \"height\": 100\r\n");
      out.write("      }\r\n");
      out.write("    },\r\n");
      out.write("    \"opacity\": {\r\n");
      out.write("      \"value\": 0.1,\r\n");
      out.write("      \"random\": false,\r\n");
      out.write("      \"anim\": {\r\n");
      out.write("        \"enable\": false,\r\n");
      out.write("        \"speed\": 1,\r\n");
      out.write("        \"opacity_min\": 0.1,\r\n");
      out.write("        \"sync\": false\r\n");
      out.write("      }\r\n");
      out.write("    },\r\n");
      out.write("    \"size\": {\r\n");
      out.write("      \"value\": 6,\r\n");
      out.write("      \"random\": false,\r\n");
      out.write("      \"anim\": {\r\n");
      out.write("        \"enable\": false,\r\n");
      out.write("        \"speed\": 40,\r\n");
      out.write("        \"size_min\": 0.1,\r\n");
      out.write("        \"sync\": false\r\n");
      out.write("      }\r\n");
      out.write("    },\r\n");
      out.write("    \"line_linked\": {\r\n");
      out.write("      \"enable\": true,\r\n");
      out.write("      \"distance\": 150,\r\n");
      out.write("      \"color\": \"#ffffff\",\r\n");
      out.write("      \"opacity\": 0.1,\r\n");
      out.write("      \"width\": 2\r\n");
      out.write("    },\r\n");
      out.write("    \"move\": {\r\n");
      out.write("      \"enable\": true,\r\n");
      out.write("      \"speed\": 1.5,\r\n");
      out.write("      \"direction\": \"top\",\r\n");
      out.write("      \"random\": false,\r\n");
      out.write("      \"straight\": false,\r\n");
      out.write("      \"out_mode\": \"out\",\r\n");
      out.write("      \"bounce\": false,\r\n");
      out.write("      \"attract\": {\r\n");
      out.write("        \"enable\": false,\r\n");
      out.write("        \"rotateX\": 600,\r\n");
      out.write("        \"rotateY\": 1200\r\n");
      out.write("      }\r\n");
      out.write("    }\r\n");
      out.write("  },\r\n");
      out.write("  \"interactivity\": {\r\n");
      out.write("    \"detect_on\": \"canvas\",\r\n");
      out.write("    \"events\": {\r\n");
      out.write("      \"onhover\": {\r\n");
      out.write("        \"enable\": false,\r\n");
      out.write("        \"mode\": \"repulse\"\r\n");
      out.write("      },\r\n");
      out.write("      \"onclick\": {\r\n");
      out.write("        \"enable\": false,\r\n");
      out.write("        \"mode\": \"push\"\r\n");
      out.write("      },\r\n");
      out.write("      \"resize\": true\r\n");
      out.write("    },\r\n");
      out.write("    \"modes\": {\r\n");
      out.write("      \"grab\": {\r\n");
      out.write("        \"distance\": 400,\r\n");
      out.write("        \"line_linked\": {\r\n");
      out.write("          \"opacity\": 1\r\n");
      out.write("        }\r\n");
      out.write("      },\r\n");
      out.write("      \"bubble\": {\r\n");
      out.write("        \"distance\": 400,\r\n");
      out.write("        \"size\": 40,\r\n");
      out.write("        \"duration\": 2,\r\n");
      out.write("        \"opacity\": 8,\r\n");
      out.write("        \"speed\": 3\r\n");
      out.write("      },\r\n");
      out.write("      \"repulse\": {\r\n");
      out.write("        \"distance\": 200,\r\n");
      out.write("        \"duration\": 0.4\r\n");
      out.write("      },\r\n");
      out.write("      \"push\": {\r\n");
      out.write("        \"particles_nb\": 4\r\n");
      out.write("      },\r\n");
      out.write("      \"remove\": {\r\n");
      out.write("        \"particles_nb\": 2\r\n");
      out.write("      }\r\n");
      out.write("    }\r\n");
      out.write("  },\r\n");
      out.write("  \"retina_detect\": true\r\n");
      out.write("});\r\n");
      out.write("</script>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
